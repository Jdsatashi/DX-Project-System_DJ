# Generated by Django 5.0.3 on 2024-08-05 09:38

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('order', '0005_order_nvtt_id'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SeasonalStatistic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('type', models.CharField(choices=[('point', 'điểm'), ('turn_over', 'doanh số')])),
                ('note', models.TextField(null=True)),
                ('created_by', models.CharField(max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='SeasonalStatisticUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('turn_per_point', models.FloatField(null=True)),
                ('turn_pick', models.IntegerField(null=True)),
                ('redundant_point', models.FloatField(null=True)),
                ('total_turnover', models.BigIntegerField(default=0)),
                ('total_point', models.FloatField(default=0)),
                ('season_stats', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='season_stats_user', to='order.seasonalstatistic')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='season_stats_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='seasonalstatistic',
            name='users',
            field=models.ManyToManyField(related_name='seasonal_statistics', through='order.SeasonalStatisticUser', to=settings.AUTH_USER_MODEL),
        ),
    ]
